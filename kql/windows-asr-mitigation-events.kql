//Summarise all recent ASR block/audit events
let Mitigations = datatable (MitigationName:string, MitigationId:string)
    [
        "Block Adobe Reader from creating child processes", "7674BA52-37EB-4A4F-A9A1-F0F9A1619A2C",
        "Block all Office applications from creating child processes", "D4F940AB-401B-4EFC-AADC-AD5F3C50688A",
        "Block credential stealing from the Windows local security authority subsystem (lsass.exe)", "9E6C4E1F-7D60-472F-BA1A-A39EF669E4B2",
        "Block executable content from email client and webmail", "BE9BA2D9-53EA-4CDC-84E5-9B1EEEE46550",
        "Block executable files from running unless they meet a prevalence, age, or trusted list criterion", "01443614-CD74-433A-B99E-2ECDC07BFC25",
        "Block execution of potentially obfuscated scripts", "5BEB7EFE-FD9A-4556-801D-275E5FFC04CC",
        "Block JavaScript or VBScript from launching downloaded executable content", "D3E037E1-3EB8-44C8-A917-57927947596D",
        "Block Office applications from creating executable content", "3B576869-A4EC-4529-8536-B80A7769E899",
        "Block Office applications from injecting code into other processes", "75668C1F-73B5-4CF0-BB93-3ECF5CB7CC84",
        "Block Office communication application from creating child processes", "26190899-1602-49E8-8B27-EB1D0A1CE869",
        "Block persistence through WMI event subscription", "E6DB77E5-3DF2-4CF1-B95A-636979351E5B",
        "Block process creations originating from PSExec and WMI commands", "D1E49AAC-8F56-4280-B9BA-993A6D77406C",
        "Block untrusted and unsigned processes that run from USB", "B2B3F03D-6A65-4F7B-A9C7-1C7EF74A9BA4",
        "Block Win32 API calls from Office macros", "92E97FA1-2EDF-4476-BDD6-9DD0B4DDDC7B",
        "Use advanced protection against ransomware", "C1DB55AB-C21A-4637-BB3F-A12568109D35"
    ];
let Responses = datatable (EventID:int, Response:string)
    [
        1121, "Block",
        1122, "Audit"
    ];
Event
| where EventLog == "Microsoft-Windows-Windows Defender/Operational" or EventLog == "Microsoft-Windows-Windows Defender/WHC"
| where EventID == 1121 or EventID == 1122
| extend ed = parse_xml(EventData).DataItem.EventData.Data
| mv-apply ed on 
(
    where ed['@Name'] == 'ID'
    | project MitigationId = toupper(tostring(ed['#text']))
)
| extend ed = parse_xml(EventData).DataItem.EventData.Data
| mv-apply ed on 
(
    where ed['@Name'] == 'Detection Time'
    | project DetectionTime = tostring(ed['#text'])
)
| extend ed = parse_xml(EventData).DataItem.EventData.Data
| mv-apply ed on 
(
    where ed['@Name'] == 'Process Name'
    | project ProcessName = tostring(ed['#text'])
)
| extend ed = parse_xml(EventData).DataItem.EventData.Data
| mv-apply ed on 
(
    where ed['@Name'] == 'User'
    | project User = tostring(ed['#text'])
)
| extend ed = parse_xml(EventData).DataItem.EventData.Data
| mv-apply ed on 
(
    where ed['@Name'] == 'Path'
    | project Path = tostring(ed['#text'])
)
| join kind=leftouter Mitigations on MitigationId
| join kind=leftouter Responses on EventID
| summarize Count=count() by Computer, MitigationName, ProcessName, User, Path, Response
| project Count, Response, Computer, MitigationName, ProcessName, User, Path
| sort by Count